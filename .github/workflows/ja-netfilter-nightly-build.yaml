name: ja-netfilter-nightly-build
on:
  schedule:
    - cron: "0 */24 * * *"
  workflow_dispatch:
jobs:
  nightly-build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
      - name: Config Github Action Bot
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - name: Update Submodules
        run: |
          git submodule init
          git submodule update
      - name: Set Up JDK8
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: dragonwell
      - name: Packaging ja-netfilter
        run: |
          mvn package -f ja-netfilter/pom.xml
      - name: Packaging plugin-dns
        run: |
          mvn package -f plugin-dns/pom.xml
      - name: Packaging plugin-power
        run: |
          mvn package -f plugin-power/pom.xml
      - name: Packaging plugin-url
        run: |
          mvn package -f plugin-url/pom.xml
      - name: Setup Python
        uses: actions/setup-python@v5.1.0
        with:
          python-version: 3.12
      - name: Get Licenses
        run: |
          pip install -r scripts/requirements.txt
          python scripts/get_jb_licenses.py
      - name: Stage Artifacts
        env:
          plugins: plugin-dns plugin-power plugin-url
          targets: dbeaver jetbrains
        run: |
          mkdir -p staging/ja-netfilter/plugins  
          mv licenses staging/ja-netfilter
          cp .github/base.vmoptions staging/ja-netfitler
          cp ja-netfilter/target/*-jar-with-dependencies.jar staging/ja-netfilter
          for plugin in ${{env.plugins}};do
            cp ${plugin}/target/*-jar-with-dependencies.jar staging/ja-netfilter/plugins
          done
          for target in ${{env.targets}};do
            cd staging/ja-netfilter
            ln -s plugins plugins-${target}
            cd ../..
            cp -r .github/config-${target} staging/ja-netfilter
          done
          cd staging && ls -lh
          tar -cvf ja-netfilter.tar ja-netfilter && bzip2 ja-netfilter.tar
      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create "$(date -I).$(uuidgen -t)" --notes "nightly build" staging/ja-netfilter.tar.bz2